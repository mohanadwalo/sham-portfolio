{"version":3,"sources":["assets/svgs/shared/check-list-style.svg","components/shared/ULlist.tsx","features/about/experience.tsx"],"names":["StyledULlist","styled","ul","props","theme","fonts","body","listStyleIcon","ULlist","children","StyledExperience","div","about","areaMargin","h6","small","titleSpaceTopBottom","h4","colors","primary","h5","bodySpace","Experience","dispatch","useAppDispatch","data","useAppSelector","selectAllAbout","useEffect","status","getAboutFromApi","experience","map","className","location","startDate","endDate","companyName","companyDescription","projects","project","to","id","title","tasks","task"],"mappings":"mLAAe,MAA0B,6C,OCGnCA,EAAeC,IAAOC,GAAV,8WAOZ,SAACC,GAAD,OAAWA,EAAMC,MAAMC,MAAMC,OAOdC,GAURC,EAA+B,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,SAC7C,OAAO,cAACT,EAAD,UAAeS,M,yGCrBlBC,EAAmBT,IAAOU,IAAV,w0CAClB,SAACR,GAAD,OAAWA,EAAMC,MAAMQ,SAKrB,SAACT,GAAD,OAAWA,EAAMC,MAAMS,cASnB,SAACV,GAAD,OAAWA,EAAMC,MAAMC,MAAMS,MAG7B,SAACX,GAAD,OAAWA,EAAMC,MAAMC,MAAMU,SAC7B,SAACZ,GAAD,OAAWA,EAAMC,MAAMY,uBAQrB,SAACb,GAAD,OAAWA,EAAMC,MAAMC,MAAMY,MACtB,SAACd,GAAD,OAAWA,EAAMC,MAAMc,OAAOC,WAOvC,SAAChB,GAAD,OAAWA,EAAMC,MAAMC,MAAMe,MAcT,SAACjB,GAAD,OAAWA,EAAMC,MAAMc,OAAOC,WAOlD,SAAChB,GAAD,OAAWA,EAAMC,MAAMC,MAAMC,QAC7B,SAACH,GAAD,OAAWA,EAAMC,MAAMiB,aAyElBC,UA7Dc,WAC3B,IAAMC,EAAWC,cACXC,EAAOC,YAAeC,KAM5B,OAJAC,qBAAU,WACY,YAAhBH,EAAKI,QAAsBN,EAASO,iBACvC,CAACL,EAAKI,OAAQN,IAGf,cAACb,EAAD,UACGe,EAAKb,MAAMmB,WAAWC,KAAI,SAACD,GAAD,OACzB,sBAAyBE,UAAU,aAAnC,UACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,eACf,qBAAKA,UAAU,WAAf,SAA2BF,EAAWG,WACtC,sBAAKD,UAAU,OAAf,UACE,qBAAKA,UAAU,QAAf,SAAwBF,EAAWI,YACnC,qBAAKF,UAAU,WACf,qBAAKA,UAAU,WACf,qBAAKA,UAAU,WACf,qBAAKA,UAAU,WACf,qBAAKA,UAAU,WACf,qBAAKA,UAAU,WACf,qBAAKA,UAAU,aAAf,SAA6BF,EAAWK,gBAG5C,sBAAKH,UAAU,UAAf,UACE,sBAAKA,UAAU,UAAf,UACE,qBAAKA,UAAU,OAAf,SAAuBF,EAAWM,cAClC,qBAAKJ,UAAU,cAAf,SAA8BF,EAAWO,wBAE3C,sBAAKL,UAAU,WAAf,UACE,qBAAKA,UAAU,QAAf,sBACA,qBAAKA,UAAU,gBAAf,SACGF,EAAWQ,SAASP,KAAI,SAACQ,GAAD,OACvB,cAAC,IAAD,CAEEC,GAAE,oBAAeD,EAAQE,IAF3B,SAIGF,EAAQG,OAJX,UACUZ,EAAWW,GADrB,YAC2BF,EAAQE,aAQzC,sBAAKT,UAAU,QAAf,UACE,qBAAKA,UAAU,QAAf,mBACA,qBAAKA,UAAU,aAAf,SACE,cAAC,IAAD,UACGF,EAAWa,MAAMZ,KAAI,SAACa,GAAD,OACpB,6BAAgBA,GAAPA,kBAtCXd,EAAWW","file":"static/js/5.84658e48.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/check-list-style.89881e97.svg\";","import styled from 'styled-components';\nimport listStyleIcon from '../../assets/svgs/shared/check-list-style.svg';\n\nconst StyledULlist = styled.ul`\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  li {\n    ${(props) => props.theme.fonts.body}\n    list-style-type: none;\n    position relative;\n    :before {\n      position: absolute;\n      left: 0;\n      top: 3px;\n      content: url(${listStyleIcon});\n    }\n    padding-bottom: 0.6rem;\n    padding-left: 2rem;\n  }\n`;\n\ntype ULlistType = {\n  children: React.ReactNode;\n};\nexport const ULlist: React.FC<ULlistType> = ({ children }: ULlistType) => {\n  return <StyledULlist>{children}</StyledULlist>;\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { ULlist } from '../../components/shared/ULlist';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { useEffect } from 'react';\nimport { getAboutFromApi, selectAllAbout } from './aboutSlice';\n\nconst StyledExperience = styled.div`\n  ${(props) => props.theme.about}\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  .experience {\n    ${(props) => props.theme.areaMargin}\n    display: flex;\n    .time-line {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      text-align: center;\n      .location {\n        text-transform: capitalize;\n        ${(props) => props.theme.fonts.h6}\n      }\n      .path {\n        ${(props) => props.theme.fonts.small}\n        ${(props) => props.theme.titleSpaceTopBottom}\n      }\n    }\n\n    .details {\n      flex: 1;\n      .company {\n        .name {\n          ${(props) => props.theme.fonts.h4}\n          color: ${(props) => props.theme.colors.primary};\n          text-transform: capitalize;\n        }\n      }\n      .projects .title,\n      .tasks .title,\n      .courses .title {\n        ${(props) => props.theme.fonts.h5}\n        display: flex;\n        align-items: center;\n        text-transform: capitalize;\n        position: relative;\n        padding-left: 1.25rem;\n        :before {\n          position: absolute;\n          width: 10px;\n          height: 2.625rem;\n          left: 0;\n          top: -0.5rem;\n          border-radius: 1.25rem;\n          content: '';\n          background-color: ${(props) => props.theme.colors.primary};\n        }\n      }\n      .company .description,\n      .projects .projects-list,\n      .tasks .tasks-list,\n      .courses .courses-list {\n        ${(props) => props.theme.fonts.body}\n        ${(props) => props.theme.bodySpace}\n      }\n      .projects-list {\n        a {\n          color: inherit;\n          padding: 0 1rem;\n        }\n      }\n    }\n  }\n`;\n\nconst Experience: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const data = useAppSelector(selectAllAbout);\n\n  useEffect(() => {\n    if (data.status === 'pending') dispatch(getAboutFromApi());\n  }, [data.status, dispatch]);\n\n  return (\n    <StyledExperience>\n      {data.about.experience.map((experience) => (\n        <div key={experience.id} className='experience'>\n          <div className='time-line'>\n            <div className='start-date'></div>\n            <div className='location'>{experience.location}</div>\n            <div className='path'>\n              <div className='start'>{experience.startDate}</div>\n              <div className='middle'></div>\n              <div className='middle'></div>\n              <div className='middle'></div>\n              <div className='middle'></div>\n              <div className='middle'></div>\n              <div className='middle'></div>\n              <div className='circle end'>{experience.endDate}</div>\n            </div>\n          </div>\n          <div className='details'>\n            <div className='company'>\n              <div className='name'>{experience.companyName}</div>\n              <div className='description'>{experience.companyDescription}</div>\n            </div>\n            <div className='projects'>\n              <div className='title'>projects</div>\n              <div className='projects-list'>\n                {experience.projects.map((project) => (\n                  <Link\n                    key={`${experience.id}_${project.id}`}\n                    to={`/projects/${project.id}`}\n                  >\n                    {project.title}\n                  </Link>\n                ))}\n              </div>\n            </div>\n            <div className='tasks'>\n              <div className='title'>tasks</div>\n              <div className='tasks-list'>\n                <ULlist>\n                  {experience.tasks.map((task) => (\n                    <li key={task}>{task}</li>\n                  ))}\n                </ULlist>\n              </div>\n            </div>\n          </div>\n        </div>\n      ))}\n    </StyledExperience>\n  );\n};\n\nexport default Experience;\n"],"sourceRoot":""}