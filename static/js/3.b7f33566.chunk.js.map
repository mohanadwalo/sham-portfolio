{"version":3,"sources":["components/shared/twoColumnLayout.tsx","assets/svgs/shared/check-list-style.svg","components/shared/ULlist.tsx","assets/svgs/certifications/certification-large.svg","features/certifications/certifications.tsx","pages/certificationsPage.tsx"],"names":["StyledTwoColumnLayout","styled","div","props","theme","twoColumnLayout","regionSpace","TwoColumnLayout","leftContent","children","className","StyledULlist","ul","fonts","body","listStyleIcon","ULlist","StyledCertifications","certifications","primaryVariant1","h3","colors","primary","h6","bodySpaceTopBottom","Certifications","dispatch","useAppDispatch","data","useAppSelector","selectAllCertifications","useEffect","status","getCertificationsFromApi","src","certificationsLargeIcon","alt","map","certification","icon","title","issueDate","expireDate","description","desc","id","CertificationsPage","name","content"],"mappings":"0LAIMA,EAAwBC,IAAOC,IAAV,ipBACvB,SAACC,GAAD,OAAWA,EAAMC,MAAMC,mBAOrB,SAACF,GAAD,OAAWA,EAAMC,MAAME,eAkChBC,EAA2C,SAAC,GAG7B,IAF1BC,EAEyB,EAFzBA,YACAC,EACyB,EADzBA,SAEA,OACE,cAACT,EAAD,UACE,sBAAKU,UAAU,eAAf,UACE,qBAAKA,UAAU,OAAf,SACE,qBAAKA,UAAU,QAAf,SAAwBF,MAE1B,qBAAKE,UAAU,QAAf,SAAwBD,W,sFCxDjB,MAA0B,6C,OCGnCE,EAAeV,IAAOW,GAAV,8WAOZ,SAACT,GAAD,OAAWA,EAAMC,MAAMS,MAAMC,OAOdC,GAURC,EAA+B,SAAC,GAA8B,IAA5BP,EAA2B,EAA3BA,SAC7C,OAAO,cAACE,EAAD,UAAeF,M,kFC5BT,MAA0B,gD,+BCYnCQ,EAAuBhB,IAAOC,IAAV,saACtB,SAACC,GAAD,OAAWA,EAAMC,MAAMc,kBAQK,SAACf,GAAD,OAAWA,EAAMC,MAAMe,mBAK7C,SAAChB,GAAD,OAAWA,EAAMC,MAAMS,MAAMO,MACtB,SAACjB,GAAD,OAAWA,EAAMC,MAAMiB,OAAOC,WAGrC,SAACnB,GAAD,OAAWA,EAAMC,MAAMS,MAAMU,MAG7B,SAACpB,GAAD,OAAWA,EAAMC,MAAMoB,sBAMpBC,EAA2B,WACtC,IAAMC,EAAWC,cACXC,EAAOC,YAAeC,KAI5B,OAHAC,qBAAU,WACY,YAAhBH,EAAKI,QAAsBN,EAASO,iBACvC,CAACL,EAAKI,OAAQN,IAEf,cAAC,IAAD,CACElB,YAAa,qBAAK0B,IAAKC,EAAyBC,IAAI,mBADtD,SAGE,cAACnB,EAAD,UACGW,EAAKV,eAAemB,KAAI,SAACC,GAAD,OACvB,sBAAK5B,UAAU,gBAAf,UACE,qBAAKwB,IAAKI,EAAcC,KAAMH,IAAKE,EAAcE,QACjD,sBAAK9B,UAAU,wBAAf,UACE,qBAAKA,UAAU,QAAf,SAAwB4B,EAAcE,QACtC,qBAAK9B,UAAU,OAAf,mBAA0B4B,EAAcG,UAAxC,YAAqDH,EAAcI,cACnE,qBAAKhC,UAAU,cAAf,SACE,cAACM,EAAA,EAAD,UACGsB,EAAcK,YAAYN,KAAI,SAACO,GAAD,OAC7B,6BAA+BA,GAA/B,oBAAsBA,gBARhC,eAA4CN,EAAcO,aChCrDC,UAdsB,WACnC,OACE,qCACE,cAAC,IAAD,CAAQN,MAAM,iBAAd,SACE,sBACEO,KAAK,cACLC,QAAQ,8BACR,oBAAkB,WAGtB,cAAC,EAAD","file":"static/js/3.b7f33566.chunk.js","sourcesContent":["import { FC } from 'react';\n\nimport styled from 'styled-components';\n\nconst StyledTwoColumnLayout = styled.div`\n  ${(props) => props.theme.twoColumnLayout}\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  flex: 1;\n  height: 100%;\n  .main-content {\n    ${(props) => props.theme.regionSpace}\n    display: flex;\n    width: 100%;\n    flex: 1;\n    .left,\n    .right {\n      position: relative;\n    }\n    .left {\n      width: 14.063rem;\n      .fixed {\n        display: flex;\n        flex-direction: column;\n        align-items: flex-start;\n        position: fixed;\n        .large-icon-bottom {\n          padding-top: 25%;\n        }\n        .large-icon-top {\n          padding-bottom: 1rem;\n        }\n      }\n    }\n    .right {\n      display: flex;\n      flex: 1;\n    }\n  }\n`;\n\ntype TwoColumnLayoutType = {\n  leftContent: React.ReactNode;\n  children: React.ReactNode;\n};\nexport const TwoColumnLayout: FC<TwoColumnLayoutType> = ({\n  leftContent,\n  children,\n}: TwoColumnLayoutType) => {\n  return (\n    <StyledTwoColumnLayout>\n      <div className='main-content'>\n        <div className='left'>\n          <div className='fixed'>{leftContent}</div>\n        </div>\n        <div className='right'>{children}</div>\n      </div>\n    </StyledTwoColumnLayout>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/check-list-style.89881e97.svg\";","import styled from 'styled-components';\nimport listStyleIcon from '../../assets/svgs/shared/check-list-style.svg';\n\nconst StyledULlist = styled.ul`\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  li {\n    ${(props) => props.theme.fonts.body}\n    list-style-type: none;\n    position relative;\n    :before {\n      position: absolute;\n      left: 0;\n      top: 3px;\n      content: url(${listStyleIcon});\n    }\n    padding-bottom: 0.6rem;\n    padding-left: 2rem;\n  }\n`;\n\ntype ULlistType = {\n  children: React.ReactNode;\n};\nexport const ULlist: React.FC<ULlistType> = ({ children }: ULlistType) => {\n  return <StyledULlist>{children}</StyledULlist>;\n};\n","export default __webpack_public_path__ + \"static/media/certification-large.f6c677e1.svg\";","import React, { useEffect } from 'react';\n\nimport styled from 'styled-components';\nimport { TwoColumnLayout } from '../../components/shared/twoColumnLayout';\nimport certificationsLargeIcon from '../../assets/svgs/certifications/certification-large.svg';\nimport { ULlist } from '../../components/shared/ULlist';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport {\n  getCertificationsFromApi,\n  selectAllCertifications,\n} from './certificationsSlice';\n\nconst StyledCertifications = styled.div`\n  ${(props) => props.theme.certifications}\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  .certification {\n    display: flex;\n    img {\n      flex-shrink: 0;\n      box-shadow: 0px 1px 5px ${(props) => props.theme.primaryVariant1};\n    }\n    .certification-details {\n      padding-left: 1rem;\n      .title {\n        ${(props) => props.theme.fonts.h3}\n        color: ${(props) => props.theme.colors.primary};\n      }\n      .date {\n        ${(props) => props.theme.fonts.h6}\n      }\n      .description {\n        ${(props) => props.theme.bodySpaceTopBottom}\n      }\n    }\n  }\n`;\n\nexport const Certifications: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const data = useAppSelector(selectAllCertifications);\n  useEffect(() => {\n    if (data.status === 'pending') dispatch(getCertificationsFromApi());\n  }, [data.status, dispatch]);\n  return (\n    <TwoColumnLayout\n      leftContent={<img src={certificationsLargeIcon} alt='certifications' />}\n    >\n      <StyledCertifications>\n        {data.certifications.map((certification) => (\n          <div className='certification' key={`cert_${certification.id}`}>\n            <img src={certification.icon} alt={certification.title} />\n            <div className='certification-details'>\n              <div className='title'>{certification.title}</div>\n              <div className='date'>{`${certification.issueDate}-${certification.expireDate}`}</div>\n              <div className='description'>\n                <ULlist>\n                  {certification.description.map((desc) => (\n                    <li key={`cert_desc_${desc}`}>{desc}</li>\n                  ))}\n                </ULlist>\n              </div>\n            </div>\n          </div>\n        ))}\n      </StyledCertifications>\n    </TwoColumnLayout>\n  );\n};\n","import React from 'react';\n\nimport { Helmet } from 'react-helmet-async';\nimport { Certifications } from '../features/certifications/certifications';\n\nconst CertificationsPage: React.FC = () => {\n  return (\n    <>\n      <Helmet title='Certifications'>\n        <meta\n          name='description'\n          content='Certifications, Achievement'\n          data-react-helmet='true'\n        />\n      </Helmet>\n      <Certifications />\n    </>\n  );\n};\nexport default CertificationsPage;\n"],"sourceRoot":""}